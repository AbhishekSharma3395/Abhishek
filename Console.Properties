using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Properties
{

    class student
    {
        // Variable Or Field Declare
        private int _StdId;
        private string _Name;
        private string _Fname;
        private int _SubjectTotalMarks = 100; // ReadOnly Property
    
        public string FirstName { get; private set; }
        //private lagane se bahar ka koi member value nhi de skta.
        //Construtor only value set karwa skta kyu ki same class
        public string LastName { get; set; } //Auto Implement(ek hi line me varaible bhi bn rha or peoperty bhi )

        public student(string fname, string lname)  //Constructor
        {
            FirstName = fname;
            LastName = lname;
        }



        //Property
        public int StdId
        {
            set
            {
                if (value <= 0)
                {
                    Console.WriteLine("Id Cannot Be 0 or Negative");
                }
                else
                {
                    this._StdId = value; //23 value keyword ke pass jauga
                }
            }
            get
            {
                return this._StdId;
            }
        }

        public string Name
        {
            set
            {
                if (string.IsNullOrEmpty(value))
                {
                    Console.WriteLine("Please enter your Name");
                }
                else
                {
                    this._Name = value;
                }
            }

            get
            {
                return this._Name;
            }
        }


        public string Fname
        {
            set
            {
                if (string.IsNullOrEmpty(value))
                {
                    Console.WriteLine("Please enter your Father Name");
                }
                else
                {
                    this._Fname = value;
                }
            }

            get
            {
                return this._Fname;
            }
        }

        public int SubjectTotalMarks    // ReadOnly Property
        {
            get
            {
                return this._SubjectTotalMarks;
            }
        }



        public int StdIdSetOnly  // Write Property
        {
            set
            {
               this._StdId= value;
            }
        }

    }
    class Program
    {
        static void Main(string[] args)
        {
            student s = new student("Abhishek","Sharma");

            //s.FirstName = "Lucky";
            s.LastName = "Sharma";
            Console.WriteLine(s.FirstName);
            Console.WriteLine(s.LastName);

            s.StdId = 20; //set karwa rhe
            s.Name = "Abhishek";
            s.Fname = "Satish Sharma";
            /* s.SubjectTotalMarks = 15; */ // value set nhi kra skte error dega
            Console.WriteLine(s.StdId);
            Console.WriteLine(s.Name);//get karwa rhe
            Console.WriteLine(s.Fname);
            Console.WriteLine(s.SubjectTotalMarks);
            //s.FirstName = "First Name By Auto Implimnet";
            s.LastName = " Second NameAuto Implimnet";
            Console.WriteLine(s.FirstName+""+s.LastName);
            //s.StdIdSetOnly = 23;
            //Console.WriteLine(s.StdIdSetOnly); // getter he nhi to error

            Console.ReadLine();
        }
    }
}






















/* Properties =>
01) Allow krti class ke variable kis trh se access ho, value set or get karate jinhe accesser kehte. 
02) Property ke under 2 chheze hoti 
   a) set
   b) get
03) Property ko pehchane ka symbol ( gadi paane) ka 

Types Of property =>
01) Read / Write Property(get or set )
02) Read Only Property(get) (jyada use sirf dekhna jese setmarks )
03) Write Property(set) (km use hota)
04) Auto Implements Property (Variable + Property ka combination)

------------------ 
1) property cant take parameter, variable ke under value jane se phle check krwa skte.
2) property are like data fields(varible) but have logic behind them. (0 chcek kr rha the).
3) From outside they look like other member variable.but they act like a member function.
04) variable ki trh hi bnta he bs uske aage set get accesor laga hota he.
05) property are also used for incapsulation.
 */
